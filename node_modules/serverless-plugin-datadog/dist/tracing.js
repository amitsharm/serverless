"use strict";
/*
 * Unless explicitly stated otherwise all files in this repository are licensed
 * under the Apache License Version 2.0.
 *
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019 Datadog, Inc.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const ddTraceEnabledEnvVar = "DD_TRACE_ENABLED";
const ddMergeXrayTracesEnvVar = "DD_MERGE_XRAY_TRACES";
var TracingMode;
(function (TracingMode) {
    TracingMode[TracingMode["XRAY"] = 0] = "XRAY";
    TracingMode[TracingMode["DD_TRACE"] = 1] = "DD_TRACE";
    TracingMode[TracingMode["HYBRID"] = 2] = "HYBRID";
    TracingMode[TracingMode["NONE"] = 3] = "NONE";
})(TracingMode = exports.TracingMode || (exports.TracingMode = {}));
function enableTracing(service, tracingMode) {
    var _a;
    const provider = service.provider;
    if (tracingMode === TracingMode.XRAY || tracingMode === TracingMode.HYBRID) {
        provider.tracing = {
            apiGateway: true,
            lambda: true,
        };
    }
    if (tracingMode === TracingMode.HYBRID || tracingMode === TracingMode.DD_TRACE) {
        const environment = (_a = provider.environment) !== null && _a !== void 0 ? _a : {};
        environment[ddTraceEnabledEnvVar] = true;
        environment[ddMergeXrayTracesEnvVar] = tracingMode === TracingMode.HYBRID;
        provider.environment = environment;
    }
}
exports.enableTracing = enableTracing;
//# sourceMappingURL=tracing.js.map